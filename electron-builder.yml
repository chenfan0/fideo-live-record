appId: site.fideo.app
productName: fideo
directories:
  buildResources: build
files:
  - '!**/.vscode/*'
  - '!src/*'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'
asarUnpack:
  - ./resources/frpc.exe
  - ./resources/iconTemplate.png
  - ./resources/index.html
win:
  target:
    - target: "nsis"
      arch:
        - "x64"
        - "arm64"
  executableName: fideo
  extraFiles:
    - from: "./resources"
      to: "Resources"
nsis:
  oneClick: false
  artifactName: ${name}-${version}-${arch}.${ext}
  perMachine: true
  allowElevation: true
  allowToChangeInstallationDirectory: true
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: true
mac:
  target:
    - target: "dmg"
      arch:
        - "x64"
        - "arm64"
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false
  identity: null
  extraFiles:
    - from: "./resources"
      to: "Resources"
dmg:
  artifactName: ${name}-${version}-${arch}.${ext}
npmRebuild: false
publish:
  provider: generic
  url: https://example.com/auto-updates
